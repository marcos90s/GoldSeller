version: '3.8'

services:

  db:
    image: postgres:17-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5499:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - minha-rede
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U marquin -d gold_seller" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  app:
    container_name: image-goldseller

    build: .
    ports:
      - "8080:8080"  # Mapeia a porta da aplicação Spring.
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Configurações para a aplicação Spring se conectar ao banco 'db'.
      - SPRING_DATASOURCE_URL=${POSTGRES_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - minha-rede # Conecta este serviço à mesma rede do banco.

# Definição dos volumes
volumes:
  postgres-data:

# Definição das redes
networks:
  minha-rede:
    driver: bridge